swagger: "2.0"
info:
  description: "Contains the documentation of the APIs for Vigyanam which is an application for measuring one's scientific temper."
  version: "1.0.0"
  title: "Vigyanam"
  contact:
    email: "mein2work@gmail.com"
host: "sih-temper-app.eu-gb.mybluemix.net"
#basePath: "/v2"
tags:
- name: "Asset mapping"
  description: "Handles all the mapping between the survey questions and answers."
- name: "Score calculation"
  description: "Outputs the score as one's scietific temper recorded from the survey."
- name: "User data handling"
  description: "Handles user data."
schemes:
- "https"
paths:
  /getasset/{qid}:
    get:
      tags:
      - "Asset mapping"
      summary: "Gets the asset corresponding to a question."
      operationId: "getasset"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: qid
        in: path
        description: "ID of the question for which asset needs to be fetched."
        required: true
        type: "string"
        #schema:
          #$ref: "#/definitions/Pet"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Asset_Map_Prototype"
        400:
          description: "Question id is wrong, please check the id and try again!"
          
  '/calculate/{uid}':
    put:
      tags:
        - Score calculation
      summary: Outputs one's scientific temper as the final score.
      operationId: calculateScore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: uid
          in: path
          description: Question identifier
          required: true
          type: string
        - name: aid
          in: path
          description: Identified of the answer recoreded.
          required: true
          type: string
      responses:
        '200':
          description: success
          schema:
            $ref: "#/definitions/Answer_Map_Prototype"
        '400':
          description: this question does not exist
  /sendusrloc/{usr_id}:
    put:
      tags:
      - "User data handling"
      summary: "Creates an entry for the user in the database when he takes the survey."
      operationId: "sendusrloc"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "usr_id"
        in: "path"
        description: "User id in path param to check if the user is existing or not"
        required: true
        type: string
      - name: "user"
        in: "body"
        description: "Information about the user who is taking the survey."
        required: true
        schema:
            type: object
            required:
              - latitude
              - longitude
              - age_slab
            properties:
              latitude:
                type: number
                format: double
              longitude:
                type: number
                format: double
              age_slab:
                type: integer
      responses:
        201:
          description: "success"
  /getuserdb:
    get:
      tags:
      - "Database to dashboard!"
      summary: "Feeds all live data to dashboard from the data!"
      operationId: "getuserdb"
      responses:
        200:
          description: "success"
definitions:
  Asset_Map_Prototype:
    type: object
    properties:
      question: 
        type: "string"
      answer:
        type: "object"
        properties:
          ans1: 
            type: "string"
          ans2:
            type: "string"
          ans3:
            type: "string"
          ans4:
            type: "string"
      endpoint:
        type: "string"
        
  Answer_Map_Prototype:
    type: object
    properties:
      qid_1:
        type: string
      qid_2:
        type: string
      qid_3:
        type: string
      qid_4:
        type: string
      qid_5:
        type: string
      qid_6:
        type: string
      qid_7:
        type: string
      qid_8:
        type: string
      qid_9:
        type: string
      qid_10:
        type: string
      qid_11:
        type: string
      qid_12:
        type: string
      qid_13:
        type: string
      qid_14:
        type: string
      qid_15:
        type: string
      qid_16:
        type: string
      qid_17:
        type: string
      qid_18:
        type: string
      qid_19:
        type: string
      qid_20:
        type: string
        
